// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tenders.Guru.Infrastructure;

#nullable disable

namespace Tenders.Guru.Infrastructure.Migrations
{
    [DbContext(typeof(TendersGuruDbContext))]
    [Migration("20250626224715_AddMaxLenghtOfDescriptionInTendersTable")]
    partial class AddMaxLenghtOfDescriptionInTendersTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tenders.Guru.Domain.Entities.Supplier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ExternalId")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Tenders.Guru.Domain.Entities.Tender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("AmountEuro")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("AmountEuro");

                    b.HasIndex("Date");

                    b.HasIndex("ExternalId")
                        .IsUnique();

                    b.ToTable("Tenders");
                });

            modelBuilder.Entity("Tenders.Guru.Domain.Entities.TenderSupplier", b =>
                {
                    b.Property<Guid>("TenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupplierId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TenderId", "SupplierId");

                    b.HasIndex("SupplierId");

                    b.ToTable("TenderSuppliers");
                });

            modelBuilder.Entity("Tenders.Guru.Domain.Entities.TenderSupplier", b =>
                {
                    b.HasOne("Tenders.Guru.Domain.Entities.Supplier", "Supplier")
                        .WithMany("TenderSuppliers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tenders.Guru.Domain.Entities.Tender", "Tender")
                        .WithMany("TenderSuppliers")
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("Tender");
                });

            modelBuilder.Entity("Tenders.Guru.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("TenderSuppliers");
                });

            modelBuilder.Entity("Tenders.Guru.Domain.Entities.Tender", b =>
                {
                    b.Navigation("TenderSuppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
